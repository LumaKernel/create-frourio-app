name: Node.js CI

on:
  push:
  pull_request:
  schedule:
    - cron:  '0 10 * * *'

jobs:
  test:
    name: "Test on Node:${{ matrix.node-version }} OS:${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [10, 12, 14]
        os: [ubuntu-latest]
        include:
          - os: windows-latest
            node-version: 14
    env:
      API_ORIGIN: http://localhost:8080
      BASE_PATH: /api
      NODE_ENV: test
    steps:
      - uses: actions/checkout@v2
      - name: setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: "node_modules"
          key: ${{ runner.os }}-node-v${{ matrix.node-version }}-yarn-${{ hashFiles('yarn.lock') }}-3
      - run: yarn --frozen-lockfile
        if: steps.yarn-cache.outputs.cache-hit != 'true'
      - run: yarn lint
        if: matrix.os != 'windows-latest'
      - run: yarn build
      - run: yarn typecheck

      - run: |
          sudo systemctl start mysql.service
          node bin/index.js --answers '{"dir":"../nextjs","daemon":"pm2","prismaDB":"mysql","dbUser":"root","dbPass":"root","dbName":"test"}'
        if: matrix.os == 'ubuntu-latest'
      - run: node bin/index.js --answers '{\"dir\":\"../nextjs\",\"daemon\":\"pm2\"}'
        if: matrix.os == 'windows-latest'
      - run: npm run lint --prefix ../nextjs
      - run: npm run typecheck --prefix ../nextjs
      - run: npm test --prefix ../nextjs
        if: matrix.node-version != 10
      - run: rm -rf ../nextjs/server/node_modules
        if: matrix.os == 'ubuntu-latest'
      - run: Remove-Item ../nextjs/server/node_modules -Recurse -Force
        if: matrix.os == 'windows-latest'
      - run: npm run build:client --prefix ../nextjs
      - run: yarn --cwd ../nextjs/server
      - run: npm run build --prefix ../nextjs/server
      - run: npm run pm2:start --prefix ../nextjs/server

      - run: yarn test
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: snapshot
          path: ./server/__test__/forArtifact.md
      - run: npm run pm2:stop --prefix ../nextjs/server

      - run: node bin/index.js --answers '{"dir":"../nextjs-fetch","building":"basic","aspida":"fetch","reactHooks":"none","orm":"none","testing":"none"}'
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 10
      - run: npm run lint --prefix ../nextjs-fetch
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 10
      - run: npm run typecheck --prefix ../nextjs-fetch
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 10
      - run: rm -rf ../nextjs-fetch/server/node_modules
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 10
      - run: npm run build:client --prefix ../nextjs-fetch
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 10
      - run: yarn --cwd ../nextjs-fetch/server
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 10
      - run: rm -rf ../nextjs-fetch/node_modules
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 10
      - run: npm run build --prefix ../nextjs-fetch/server
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 10

      - run: node bin/index.js --answers '{"dir":"../nuxtjs","client":"nuxt","mode":"universal","target":"server","aspida":"fetch","testing":"none"}'
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 10
      - run: npm run lint --prefix ../nuxtjs
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 10
      - run: npm run typecheck --prefix ../nuxtjs
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 10
      - run: rm -rf ../nuxtjs/server/node_modules
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 10
      - run: npm run build:client --prefix ../nuxtjs
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 10
      - run: yarn --cwd ../nuxtjs/server
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 10
      - run: rm -rf ../nuxtjs/node_modules
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 10
      - run: npm run build --prefix ../nuxtjs/server
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 10

      - run: node bin/index.js --answers '{"dir":"../nextjs-typeorm","aspida":"fetch","reactHooks":"query","orm":"typeorm"}'
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 12
      - run: npm run lint --prefix ../nextjs-typeorm
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 12
      - run: npm run typecheck --prefix ../nextjs-typeorm
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 12
      - run: npm test --prefix ../nextjs-typeorm
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 12
      - run: rm -rf ../nextjs-typeorm/server/node_modules
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 12
      - run: npm run build:client --prefix ../nextjs-typeorm
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 12
      - run: yarn --cwd ../nextjs-typeorm/server
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 12
      - run: rm -rf ../nextjs-typeorm/node_modules
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 12
      - run: npm run build --prefix ../nextjs-typeorm/server
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 12

      - run: node bin/index.js --answers '{"dir":"../nuxtjs-jest","client":"nuxt"}'
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 12
      - run: npm run lint --prefix ../nuxtjs-jest
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 12
      - run: npm run typecheck --prefix ../nuxtjs-jest
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 12
      - run: npm test --prefix ../nuxtjs-jest
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 12
      - run: rm -rf ../nuxtjs-jest/server/node_modules
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 12
      - run: npm run build:client --prefix ../nuxtjs-jest
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 12
      - run: yarn --cwd ../nuxtjs-jest/server
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 12
      - run: rm -rf ../nuxtjs-jest/node_modules
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 12
      - run: npm run build --prefix ../nuxtjs-jest/server
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 12

      - run: node bin/index.js --answers '{"dir":"../sapper","server":"express","client":"sapper","building":"basic","aspida":"fetch","orm":"none","testing":"none"}'
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 14
      - run: npm run lint --prefix ../sapper
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 14
      - run: npm run typecheck --prefix ../sapper
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 14
      - run: rm -rf ../sapper/server/node_modules
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 14
      - run: npm run build:client --prefix ../sapper
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 14
      - run: yarn --cwd ../sapper/server
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 14
      - run: rm -rf ../sapper/node_modules
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 14
      - run: npm run build --prefix ../sapper/server
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 14

      - run: node bin/index.js --answers '{"dir":"../sapper-jest","server":"express","client":"sapper"}'
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 14
      - run: npm run lint --prefix ../sapper-jest
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 14
      - run: npm run typecheck --prefix ../sapper-jest
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 14
      - run: npm test --prefix ../sapper-jest
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 14
      - run: rm -rf ../sapper-jest/server/node_modules
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 14
      - run: npm run build:client --prefix ../sapper-jest
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 14
      - run: yarn --cwd ../sapper-jest/server
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 14
      - run: rm -rf ../sapper-jest/node_modules
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 14
      - run: npm run build --prefix ../sapper-jest/server
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 14

  release:
    runs-on: ubuntu-latest
    needs: test
    if: contains(github.ref, 'tags/v')
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
          registry-url: "https://registry.npmjs.org"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: "node_modules"
          key: ${{ runner.os }}-node-v12-yarn-${{ hashFiles('yarn.lock') }}
      - run: yarn --frozen-lockfile
        if: steps.yarn-cache.outputs.cache-hit != 'true'
      - run: yarn build
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
